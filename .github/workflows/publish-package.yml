name: Publish to Packagist

on:
  release:
    types: [published]

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, gd, iconv, json, mbstring, pdo, session, tokenizer, xml, zip, curl, fileinfo, openssl
          coverage: xdebug
          
      - name: Install Composer
        uses: ramsey/composer-install@v3
        with:
          composer-options: --no-dev --optimize-autoloader
          
      - name: Validate composer.json
        run: composer validate --strict
        
      - name: Run tests
        run: |
          composer install --dev
          vendor/bin/phpunit --coverage-text
          
      - name: Build package
        run: composer archive --format=zip --dir=dist
          
      - name: Publish to Packagist via API
        run: |
          # CrÃ©er le package archive
          PACKAGE_NAME="yowedjamal/bjpass-backend-sdk"
          PACKAGE_VERSION="${{ github.event.release.tag_name }}"
          
          # CrÃ©er le fichier de mÃ©tadonnÃ©es pour Packagist
          cat > packagist.json << EOF
          {
            "name": "$PACKAGE_NAME",
            "description": "Backend SDK PHP pour BjPass - gestion OAuth2/OIDC avec intÃ©gration Laravel",
            "type": "library",
            "license": "MIT",
            "authors": [
              {
                "name": "Yowe Djamal",
                "email": "yowedjamal@gmail.com"
              }
            ],
            "require": {
              "php": "^8.1",
              "laravel/framework": "^9.0|^10.0|^11.0"
            },
            "autoload": {
              "psr-4": {
                "BjPass\\": "src/"
              }
            },
            "extra": {
              "laravel": {
                "providers": [
                  "BjPass\\Providers\\BjPassServiceProvider"
                ],
                "aliases": {
                  "BjPass": "BjPass\\Facades\\BjPass"
                }
              }
            }
          }
          EOF
          
          # Publier via l'API Packagist (nÃ©cessite un token d'API)
          if [ -n "${{ secrets.PACKAGIST_TOKEN }}" ]; then
            echo "Publishing to Packagist via API..."
            # Note: Packagist n'a pas d'API publique pour la publication
            # Le package doit Ãªtre soumis manuellement ou via webhook
            echo "Package ready for manual submission to Packagist"
            echo "Visit: https://packagist.org/packages/submit"
          else
            echo "PACKAGIST_TOKEN not configured, skipping automatic publication"
          fi
          
      - name: Create Packagist badge
        run: |
          echo "## ðŸ“¦ Distribution" >> $GITHUB_WORKSPACE/DISTRIBUTION.md
          echo "" >> $GITHUB_WORKSPACE/DISTRIBUTION.md
          echo "### Packagist" >> $GITHUB_WORKSPACE/DISTRIBUTION.md
          echo "" >> $GITHUB_WORKSPACE/DISTRIBUTION.md
          echo "**Latest version:**" >> $GITHUB_WORKSPACE/DISTRIBUTION.md
          echo "\`\`\`bash" >> $GITHUB_WORKSPACE/DISTRIBUTION.md
          echo "composer require yowedjamal/bjpass-backend-sdk:${{ github.event.release.tag_name }}" >> $GITHUB_WORKSPACE/DISTRIBUTION.md
          echo "\`\`\`" >> $GITHUB_WORKSPACE/DISTRIBUTION.md
          echo "" >> $GITHUB_WORKSPACE/DISTRIBUTION.md
          echo "**Stats:** [https://packagist.org/packages/yowedjamal/bjpass-backend-sdk](https://packagist.org/packages/yowedjamal/bjpass-backend-sdk)" >> $GITHUB_WORKSPACE/DISTRIBUTION.md